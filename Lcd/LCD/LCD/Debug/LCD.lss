
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  0000081c  00000890  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000081c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000008aa  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000908  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000948  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001266  00000000  00000000  000009b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b1f  00000000  00000000  00001c1e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000055c  00000000  00000000  0000273d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e0  00000000  00000000  00002c9c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005cb  00000000  00000000  00002d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000681  00000000  00000000  00003347  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000039c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e1       	ldi	r30, 0x1C	; 28
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 31       	cpi	r26, 0x1A	; 26
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	8e d0       	rcall	.+284    	; 0x1d0 <main>
  b4:	b1 c3       	rjmp	.+1890   	; 0x818 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <_ZN5G_LCD16LCD_pulse_enableEv>:



void G_LCD::LCD_pulse_enable(void)
{
	PORT_CONTROL |= (1<<E_PIN);
  b8:	c7 9a       	sbi	0x18, 7	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ba:	85 e0       	ldi	r24, 0x05	; 5
  bc:	8a 95       	dec	r24
  be:	f1 f7       	brne	.-4      	; 0xbc <_ZN5G_LCD16LCD_pulse_enableEv+0x4>
  c0:	00 00       	nop
	_delay_us(1);
	PORT_CONTROL &= ~(1<<E_PIN);
  c2:	c7 98       	cbi	0x18, 7	; 24
  c4:	85 e3       	ldi	r24, 0x35	; 53
  c6:	8a 95       	dec	r24
  c8:	f1 f7       	brne	.-4      	; 0xc6 <_ZN5G_LCD16LCD_pulse_enableEv+0xe>
  ca:	00 00       	nop
  cc:	08 95       	ret

000000ce <_ZN5G_LCD14LCD_write_dataEh>:
	_delay_us(10);
}

void G_LCD::LCD_write_data(uint8_t data)
{
	PORT_CONTROL |= (1<<RS_PIN);
  ce:	c5 9a       	sbi	0x18, 5	; 24
	PORT_DATA = data;
  d0:	65 bb       	out	0x15, r22	; 21
	LCD_pulse_enable();
  d2:	f2 df       	rcall	.-28     	; 0xb8 <_ZN5G_LCD16LCD_pulse_enableEv>
  d4:	87 ec       	ldi	r24, 0xC7	; 199
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	01 97       	sbiw	r24, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <_ZN5G_LCD14LCD_write_dataEh+0xa>
  dc:	00 c0       	rjmp	.+0      	; 0xde <_ZN5G_LCD14LCD_write_dataEh+0x10>
  de:	00 00       	nop
  e0:	08 95       	ret

000000e2 <_ZN5G_LCD17LCD_write_commandEh>:
	_delay_us(50);
}

void G_LCD::LCD_write_command(uint8_t command)
{
	PORT_CONTROL &= ~(1<<RS_PIN);
  e2:	c5 98       	cbi	0x18, 5	; 24
	PORT_DATA = command;
  e4:	65 bb       	out	0x15, r22	; 21
	LCD_pulse_enable();
  e6:	e8 df       	rcall	.-48     	; 0xb8 <_ZN5G_LCD16LCD_pulse_enableEv>
  e8:	87 ec       	ldi	r24, 0xC7	; 199
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <_ZN5G_LCD17LCD_write_commandEh+0xa>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <_ZN5G_LCD17LCD_write_commandEh+0x10>
  f2:	00 00       	nop
  f4:	08 95       	ret

000000f6 <_ZN5G_LCD9LCD_clearEv>:
	_delay_us(50);
}

void G_LCD::LCD_clear(void)
{
	LCD_write_command(COMMAND_CLEAR_DISPLAY);
  f6:	61 e0       	ldi	r22, 0x01	; 1
  f8:	f4 df       	rcall	.-24     	; 0xe2 <_ZN5G_LCD17LCD_write_commandEh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fa:	2f ef       	ldi	r18, 0xFF	; 255
  fc:	86 e7       	ldi	r24, 0x76	; 118
  fe:	91 e0       	ldi	r25, 0x01	; 1
 100:	21 50       	subi	r18, 0x01	; 1
 102:	80 40       	sbci	r24, 0x00	; 0
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <_ZN5G_LCD9LCD_clearEv+0xa>
 108:	00 c0       	rjmp	.+0      	; 0x10a <_ZN5G_LCD9LCD_clearEv+0x14>
 10a:	00 00       	nop
 10c:	08 95       	ret

0000010e <_ZN5G_LCD8LCD_initEv>:
	_delay_ms(30);
}

void G_LCD::LCD_init(void)
{
 10e:	cf 93       	push	r28
 110:	df 93       	push	r29
 112:	ec 01       	movw	r28, r24
 114:	2f ef       	ldi	r18, 0xFF	; 255
 116:	81 ee       	ldi	r24, 0xE1	; 225
 118:	94 e0       	ldi	r25, 0x04	; 4
 11a:	21 50       	subi	r18, 0x01	; 1
 11c:	80 40       	sbci	r24, 0x00	; 0
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <_ZN5G_LCD8LCD_initEv+0xc>
 122:	00 c0       	rjmp	.+0      	; 0x124 <_ZN5G_LCD8LCD_initEv+0x16>
 124:	00 00       	nop
	_delay_ms(100);
	
	DDR_DATA = 0xff;
 126:	8f ef       	ldi	r24, 0xFF	; 255
 128:	84 bb       	out	0x14, r24	; 20
	PORT_DATA = 0x00;
 12a:	15 ba       	out	0x15, r1	; 21
	DDR_CONTROL |= (1<<RS_PIN) | (1<<RW_PIN) | (1<<E_PIN);
 12c:	87 b3       	in	r24, 0x17	; 23
 12e:	80 6e       	ori	r24, 0xE0	; 224
 130:	87 bb       	out	0x17, r24	; 23
	
	PORT_CONTROL &= ~(1 << RW_PIN);
 132:	c6 98       	cbi	0x18, 6	; 24
	LCD_write_command(COMMAND_8_BIT_MODE);
 134:	68 e3       	ldi	r22, 0x38	; 56
 136:	ce 01       	movw	r24, r28
 138:	d4 df       	rcall	.-88     	; 0xe2 <_ZN5G_LCD17LCD_write_commandEh>
 13a:	8f e3       	ldi	r24, 0x3F	; 63
 13c:	9c e9       	ldi	r25, 0x9C	; 156
 13e:	01 97       	sbiw	r24, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <_ZN5G_LCD8LCD_initEv+0x30>
 142:	00 c0       	rjmp	.+0      	; 0x144 <_ZN5G_LCD8LCD_initEv+0x36>
 144:	00 00       	nop
	_delay_ms(10);

	PORT_CONTROL &= ~(1 << RW_PIN);
 146:	c6 98       	cbi	0x18, 6	; 24
	LCD_write_command(COMMAND_8_BIT_MODE);
 148:	68 e3       	ldi	r22, 0x38	; 56
 14a:	ce 01       	movw	r24, r28
 14c:	ca df       	rcall	.-108    	; 0xe2 <_ZN5G_LCD17LCD_write_commandEh>
 14e:	8f e3       	ldi	r24, 0x3F	; 63
 150:	9c e9       	ldi	r25, 0x9C	; 156
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <_ZN5G_LCD8LCD_initEv+0x44>
 156:	00 c0       	rjmp	.+0      	; 0x158 <_ZN5G_LCD8LCD_initEv+0x4a>
 158:	00 00       	nop
	_delay_ms(10);

	PORT_CONTROL &= ~(1 << RW_PIN);
 15a:	c6 98       	cbi	0x18, 6	; 24
	LCD_write_command(COMMAND_8_BIT_MODE);
 15c:	68 e3       	ldi	r22, 0x38	; 56
 15e:	ce 01       	movw	r24, r28
 160:	c0 df       	rcall	.-128    	; 0xe2 <_ZN5G_LCD17LCD_write_commandEh>
 162:	8f e3       	ldi	r24, 0x3F	; 63
 164:	9c e9       	ldi	r25, 0x9C	; 156
 166:	01 97       	sbiw	r24, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <_ZN5G_LCD8LCD_initEv+0x58>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <_ZN5G_LCD8LCD_initEv+0x5e>
	_delay_ms(10);
	
	uint8_t command = 0x08 | (1<<COMMAND_DISPLAY_ON_OFF_BIT);
	LCD_write_command(command);
 16c:	00 00       	nop
 16e:	6c e0       	ldi	r22, 0x0C	; 12
 170:	ce 01       	movw	r24, r28
	
	LCD_clear();
 172:	b7 df       	rcall	.-146    	; 0xe2 <_ZN5G_LCD17LCD_write_commandEh>
 174:	ce 01       	movw	r24, r28
	
	LCD_write_command(0x06);
 176:	bf df       	rcall	.-130    	; 0xf6 <_ZN5G_LCD9LCD_clearEv>
 178:	66 e0       	ldi	r22, 0x06	; 6
 17a:	ce 01       	movw	r24, r28
 17c:	b2 df       	rcall	.-156    	; 0xe2 <_ZN5G_LCD17LCD_write_commandEh>
}
 17e:	df 91       	pop	r29
 180:	cf 91       	pop	r28
 182:	08 95       	ret

00000184 <_ZN5G_LCD16LCD_write_stringEPc>:

void G_LCD::LCD_write_string(char *string)
{
 184:	ef 92       	push	r14
 186:	ff 92       	push	r15
 188:	0f 93       	push	r16
 18a:	1f 93       	push	r17
 18c:	cf 93       	push	r28
 18e:	fb 01       	movw	r30, r22
	uint8_t i;
	for (i=0; string[i]; i++)
 190:	60 81       	ld	r22, Z
 192:	66 23       	and	r22, r22
 194:	61 f0       	breq	.+24     	; 0x1ae <_ZN5G_LCD16LCD_write_stringEPc+0x2a>
 196:	8f 01       	movw	r16, r30
 198:	7c 01       	movw	r14, r24
 19a:	c0 e0       	ldi	r28, 0x00	; 0
	{
		LCD_write_data(string[i]);
 19c:	c7 01       	movw	r24, r14
 19e:	97 df       	rcall	.-210    	; 0xce <_ZN5G_LCD14LCD_write_dataEh>
}

void G_LCD::LCD_write_string(char *string)
{
	uint8_t i;
	for (i=0; string[i]; i++)
 1a0:	cf 5f       	subi	r28, 0xFF	; 255
 1a2:	f8 01       	movw	r30, r16
 1a4:	ec 0f       	add	r30, r28
 1a6:	f1 1d       	adc	r31, r1
 1a8:	60 81       	ld	r22, Z
 1aa:	61 11       	cpse	r22, r1
 1ac:	f7 cf       	rjmp	.-18     	; 0x19c <_ZN5G_LCD16LCD_write_stringEPc+0x18>
	{
		LCD_write_data(string[i]);
	}
	
}
 1ae:	cf 91       	pop	r28
 1b0:	1f 91       	pop	r17
 1b2:	0f 91       	pop	r16
 1b4:	ff 90       	pop	r15
 1b6:	ef 90       	pop	r14
 1b8:	08 95       	ret

000001ba <_ZN5G_LCD11LCD_goto_XYEhh>:
	row %= 2;
	
	uint8_t address = (0x40*row) + col;
	uint8_t command = 0x80 + address;
	
	LCD_write_command(command);
 1ba:	26 2f       	mov	r18, r22
 1bc:	21 70       	andi	r18, 0x01	; 1
 1be:	64 2f       	mov	r22, r20
 1c0:	6f 70       	andi	r22, 0x0F	; 15
 1c2:	30 e4       	ldi	r19, 0x40	; 64
 1c4:	23 9f       	mul	r18, r19
 1c6:	60 0d       	add	r22, r0
 1c8:	11 24       	eor	r1, r1
 1ca:	60 58       	subi	r22, 0x80	; 128
 1cc:	8a cf       	rjmp	.-236    	; 0xe2 <_ZN5G_LCD17LCD_write_commandEh>
 1ce:	08 95       	ret

000001d0 <main>:
#include <util/delay.h>
#include "G_LCD.h"
#include <stdio.h>

int main(void)
{
 1d0:	cf 93       	push	r28
 1d2:	df 93       	push	r29
 1d4:	cd b7       	in	r28, 0x3d	; 61
 1d6:	de b7       	in	r29, 0x3e	; 62
 1d8:	c0 54       	subi	r28, 0x40	; 64
 1da:	d1 09       	sbc	r29, r1
 1dc:	0f b6       	in	r0, 0x3f	; 63
 1de:	f8 94       	cli
 1e0:	de bf       	out	0x3e, r29	; 62
 1e2:	0f be       	out	0x3f, r0	; 63
 1e4:	cd bf       	out	0x3d, r28	; 61


public:

G_LCD(){
	LCD_init();
 1e6:	ce 01       	movw	r24, r28
 1e8:	01 96       	adiw	r24, 0x01	; 1
 1ea:	91 df       	rcall	.-222    	; 0x10e <_ZN5G_LCD8LCD_initEv>
    G_LCD mylcd;
	char buffer[32];
	uint16_t counter=0;
	mylcd.LCD_clear();
 1ec:	ce 01       	movw	r24, r28
 1ee:	01 96       	adiw	r24, 0x01	; 1
 1f0:	82 df       	rcall	.-252    	; 0xf6 <_ZN5G_LCD9LCD_clearEv>
	mylcd.LCD_goto_XY(0,0);
 1f2:	40 e0       	ldi	r20, 0x00	; 0
 1f4:	60 e0       	ldi	r22, 0x00	; 0
 1f6:	ce 01       	movw	r24, r28
 1f8:	01 96       	adiw	r24, 0x01	; 1
 1fa:	df df       	rcall	.-66     	; 0x1ba <_ZN5G_LCD11LCD_goto_XYEhh>
	mylcd.LCD_write_string("Hello Wolrd");
 1fc:	60 e0       	ldi	r22, 0x00	; 0
 1fe:	71 e0       	ldi	r23, 0x01	; 1
 200:	ce 01       	movw	r24, r28
 202:	01 96       	adiw	r24, 0x01	; 1
 204:	bf df       	rcall	.-130    	; 0x184 <_ZN5G_LCD16LCD_write_stringEPc>

int main(void)
{
    G_LCD mylcd;
	char buffer[32];
	uint16_t counter=0;
 206:	00 e0       	ldi	r16, 0x00	; 0
 208:	10 e0       	ldi	r17, 0x00	; 0
	mylcd.LCD_goto_XY(0,0);
	mylcd.LCD_write_string("Hello Wolrd");
    while (1) 
    {
	
	sprintf(buffer,"counter : %d",counter);
 20a:	0f 2e       	mov	r0, r31
 20c:	fc e0       	ldi	r31, 0x0C	; 12
 20e:	cf 2e       	mov	r12, r31
 210:	f1 e0       	ldi	r31, 0x01	; 1
 212:	df 2e       	mov	r13, r31
 214:	f0 2d       	mov	r31, r0
 216:	7e 01       	movw	r14, r28
 218:	21 e2       	ldi	r18, 0x21	; 33
 21a:	e2 0e       	add	r14, r18
 21c:	f1 1c       	adc	r15, r1
 21e:	1f 93       	push	r17
 220:	0f 93       	push	r16
 222:	df 92       	push	r13
 224:	cf 92       	push	r12
 226:	ff 92       	push	r15
 228:	ef 92       	push	r14
 22a:	1b d0       	rcall	.+54     	; 0x262 <sprintf>
	mylcd.LCD_goto_XY(1,0);
 22c:	40 e0       	ldi	r20, 0x00	; 0
 22e:	61 e0       	ldi	r22, 0x01	; 1
 230:	ce 01       	movw	r24, r28
 232:	01 96       	adiw	r24, 0x01	; 1
 234:	c2 df       	rcall	.-124    	; 0x1ba <_ZN5G_LCD11LCD_goto_XYEhh>
	mylcd.LCD_write_string(buffer);
 236:	b7 01       	movw	r22, r14
 238:	ce 01       	movw	r24, r28
 23a:	01 96       	adiw	r24, 0x01	; 1
 23c:	a3 df       	rcall	.-186    	; 0x184 <_ZN5G_LCD16LCD_write_stringEPc>
 23e:	0f 5f       	subi	r16, 0xFF	; 255
	counter++;
 240:	1f 4f       	sbci	r17, 0xFF	; 255
 242:	8f ef       	ldi	r24, 0xFF	; 255
 244:	94 e3       	ldi	r25, 0x34	; 52
 246:	2c e0       	ldi	r18, 0x0C	; 12
 248:	81 50       	subi	r24, 0x01	; 1
 24a:	90 40       	sbci	r25, 0x00	; 0
 24c:	20 40       	sbci	r18, 0x00	; 0
 24e:	e1 f7       	brne	.-8      	; 0x248 <main+0x78>
 250:	00 c0       	rjmp	.+0      	; 0x252 <main+0x82>
 252:	00 00       	nop
 254:	0f 90       	pop	r0
 256:	0f 90       	pop	r0
 258:	0f 90       	pop	r0
 25a:	0f 90       	pop	r0
 25c:	0f 90       	pop	r0
 25e:	0f 90       	pop	r0
 260:	de cf       	rjmp	.-68     	; 0x21e <main+0x4e>

00000262 <sprintf>:
 262:	0f 93       	push	r16
 264:	1f 93       	push	r17
 266:	cf 93       	push	r28
 268:	df 93       	push	r29
 26a:	cd b7       	in	r28, 0x3d	; 61
 26c:	de b7       	in	r29, 0x3e	; 62
 26e:	2e 97       	sbiw	r28, 0x0e	; 14
 270:	0f b6       	in	r0, 0x3f	; 63
 272:	f8 94       	cli
 274:	de bf       	out	0x3e, r29	; 62
 276:	0f be       	out	0x3f, r0	; 63
 278:	cd bf       	out	0x3d, r28	; 61
 27a:	0d 89       	ldd	r16, Y+21	; 0x15
 27c:	1e 89       	ldd	r17, Y+22	; 0x16
 27e:	86 e0       	ldi	r24, 0x06	; 6
 280:	8c 83       	std	Y+4, r24	; 0x04
 282:	1a 83       	std	Y+2, r17	; 0x02
 284:	09 83       	std	Y+1, r16	; 0x01
 286:	8f ef       	ldi	r24, 0xFF	; 255
 288:	9f e7       	ldi	r25, 0x7F	; 127
 28a:	9e 83       	std	Y+6, r25	; 0x06
 28c:	8d 83       	std	Y+5, r24	; 0x05
 28e:	ae 01       	movw	r20, r28
 290:	47 5e       	subi	r20, 0xE7	; 231
 292:	5f 4f       	sbci	r21, 0xFF	; 255
 294:	6f 89       	ldd	r22, Y+23	; 0x17
 296:	78 8d       	ldd	r23, Y+24	; 0x18
 298:	ce 01       	movw	r24, r28
 29a:	01 96       	adiw	r24, 0x01	; 1
 29c:	10 d0       	rcall	.+32     	; 0x2be <vfprintf>
 29e:	ef 81       	ldd	r30, Y+7	; 0x07
 2a0:	f8 85       	ldd	r31, Y+8	; 0x08
 2a2:	e0 0f       	add	r30, r16
 2a4:	f1 1f       	adc	r31, r17
 2a6:	10 82       	st	Z, r1
 2a8:	2e 96       	adiw	r28, 0x0e	; 14
 2aa:	0f b6       	in	r0, 0x3f	; 63
 2ac:	f8 94       	cli
 2ae:	de bf       	out	0x3e, r29	; 62
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	cd bf       	out	0x3d, r28	; 61
 2b4:	df 91       	pop	r29
 2b6:	cf 91       	pop	r28
 2b8:	1f 91       	pop	r17
 2ba:	0f 91       	pop	r16
 2bc:	08 95       	ret

000002be <vfprintf>:
 2be:	2f 92       	push	r2
 2c0:	3f 92       	push	r3
 2c2:	4f 92       	push	r4
 2c4:	5f 92       	push	r5
 2c6:	6f 92       	push	r6
 2c8:	7f 92       	push	r7
 2ca:	8f 92       	push	r8
 2cc:	9f 92       	push	r9
 2ce:	af 92       	push	r10
 2d0:	bf 92       	push	r11
 2d2:	cf 92       	push	r12
 2d4:	df 92       	push	r13
 2d6:	ef 92       	push	r14
 2d8:	ff 92       	push	r15
 2da:	0f 93       	push	r16
 2dc:	1f 93       	push	r17
 2de:	cf 93       	push	r28
 2e0:	df 93       	push	r29
 2e2:	cd b7       	in	r28, 0x3d	; 61
 2e4:	de b7       	in	r29, 0x3e	; 62
 2e6:	2b 97       	sbiw	r28, 0x0b	; 11
 2e8:	0f b6       	in	r0, 0x3f	; 63
 2ea:	f8 94       	cli
 2ec:	de bf       	out	0x3e, r29	; 62
 2ee:	0f be       	out	0x3f, r0	; 63
 2f0:	cd bf       	out	0x3d, r28	; 61
 2f2:	6c 01       	movw	r12, r24
 2f4:	7b 01       	movw	r14, r22
 2f6:	8a 01       	movw	r16, r20
 2f8:	fc 01       	movw	r30, r24
 2fa:	17 82       	std	Z+7, r1	; 0x07
 2fc:	16 82       	std	Z+6, r1	; 0x06
 2fe:	83 81       	ldd	r24, Z+3	; 0x03
 300:	81 ff       	sbrs	r24, 1
 302:	bf c1       	rjmp	.+894    	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 304:	ce 01       	movw	r24, r28
 306:	01 96       	adiw	r24, 0x01	; 1
 308:	3c 01       	movw	r6, r24
 30a:	f6 01       	movw	r30, r12
 30c:	93 81       	ldd	r25, Z+3	; 0x03
 30e:	f7 01       	movw	r30, r14
 310:	93 fd       	sbrc	r25, 3
 312:	85 91       	lpm	r24, Z+
 314:	93 ff       	sbrs	r25, 3
 316:	81 91       	ld	r24, Z+
 318:	7f 01       	movw	r14, r30
 31a:	88 23       	and	r24, r24
 31c:	09 f4       	brne	.+2      	; 0x320 <vfprintf+0x62>
 31e:	ad c1       	rjmp	.+858    	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 320:	85 32       	cpi	r24, 0x25	; 37
 322:	39 f4       	brne	.+14     	; 0x332 <vfprintf+0x74>
 324:	93 fd       	sbrc	r25, 3
 326:	85 91       	lpm	r24, Z+
 328:	93 ff       	sbrs	r25, 3
 32a:	81 91       	ld	r24, Z+
 32c:	7f 01       	movw	r14, r30
 32e:	85 32       	cpi	r24, 0x25	; 37
 330:	21 f4       	brne	.+8      	; 0x33a <vfprintf+0x7c>
 332:	b6 01       	movw	r22, r12
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	d6 d1       	rcall	.+940    	; 0x6e4 <fputc>
 338:	e8 cf       	rjmp	.-48     	; 0x30a <vfprintf+0x4c>
 33a:	91 2c       	mov	r9, r1
 33c:	21 2c       	mov	r2, r1
 33e:	31 2c       	mov	r3, r1
 340:	ff e1       	ldi	r31, 0x1F	; 31
 342:	f3 15       	cp	r31, r3
 344:	d8 f0       	brcs	.+54     	; 0x37c <vfprintf+0xbe>
 346:	8b 32       	cpi	r24, 0x2B	; 43
 348:	79 f0       	breq	.+30     	; 0x368 <vfprintf+0xaa>
 34a:	38 f4       	brcc	.+14     	; 0x35a <vfprintf+0x9c>
 34c:	80 32       	cpi	r24, 0x20	; 32
 34e:	79 f0       	breq	.+30     	; 0x36e <vfprintf+0xb0>
 350:	83 32       	cpi	r24, 0x23	; 35
 352:	a1 f4       	brne	.+40     	; 0x37c <vfprintf+0xbe>
 354:	23 2d       	mov	r18, r3
 356:	20 61       	ori	r18, 0x10	; 16
 358:	1d c0       	rjmp	.+58     	; 0x394 <vfprintf+0xd6>
 35a:	8d 32       	cpi	r24, 0x2D	; 45
 35c:	61 f0       	breq	.+24     	; 0x376 <vfprintf+0xb8>
 35e:	80 33       	cpi	r24, 0x30	; 48
 360:	69 f4       	brne	.+26     	; 0x37c <vfprintf+0xbe>
 362:	23 2d       	mov	r18, r3
 364:	21 60       	ori	r18, 0x01	; 1
 366:	16 c0       	rjmp	.+44     	; 0x394 <vfprintf+0xd6>
 368:	83 2d       	mov	r24, r3
 36a:	82 60       	ori	r24, 0x02	; 2
 36c:	38 2e       	mov	r3, r24
 36e:	e3 2d       	mov	r30, r3
 370:	e4 60       	ori	r30, 0x04	; 4
 372:	3e 2e       	mov	r3, r30
 374:	2a c0       	rjmp	.+84     	; 0x3ca <vfprintf+0x10c>
 376:	f3 2d       	mov	r31, r3
 378:	f8 60       	ori	r31, 0x08	; 8
 37a:	1d c0       	rjmp	.+58     	; 0x3b6 <vfprintf+0xf8>
 37c:	37 fc       	sbrc	r3, 7
 37e:	2d c0       	rjmp	.+90     	; 0x3da <vfprintf+0x11c>
 380:	20 ed       	ldi	r18, 0xD0	; 208
 382:	28 0f       	add	r18, r24
 384:	2a 30       	cpi	r18, 0x0A	; 10
 386:	40 f0       	brcs	.+16     	; 0x398 <vfprintf+0xda>
 388:	8e 32       	cpi	r24, 0x2E	; 46
 38a:	b9 f4       	brne	.+46     	; 0x3ba <vfprintf+0xfc>
 38c:	36 fc       	sbrc	r3, 6
 38e:	75 c1       	rjmp	.+746    	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 390:	23 2d       	mov	r18, r3
 392:	20 64       	ori	r18, 0x40	; 64
 394:	32 2e       	mov	r3, r18
 396:	19 c0       	rjmp	.+50     	; 0x3ca <vfprintf+0x10c>
 398:	36 fe       	sbrs	r3, 6
 39a:	06 c0       	rjmp	.+12     	; 0x3a8 <vfprintf+0xea>
 39c:	8a e0       	ldi	r24, 0x0A	; 10
 39e:	98 9e       	mul	r9, r24
 3a0:	20 0d       	add	r18, r0
 3a2:	11 24       	eor	r1, r1
 3a4:	92 2e       	mov	r9, r18
 3a6:	11 c0       	rjmp	.+34     	; 0x3ca <vfprintf+0x10c>
 3a8:	ea e0       	ldi	r30, 0x0A	; 10
 3aa:	2e 9e       	mul	r2, r30
 3ac:	20 0d       	add	r18, r0
 3ae:	11 24       	eor	r1, r1
 3b0:	22 2e       	mov	r2, r18
 3b2:	f3 2d       	mov	r31, r3
 3b4:	f0 62       	ori	r31, 0x20	; 32
 3b6:	3f 2e       	mov	r3, r31
 3b8:	08 c0       	rjmp	.+16     	; 0x3ca <vfprintf+0x10c>
 3ba:	8c 36       	cpi	r24, 0x6C	; 108
 3bc:	21 f4       	brne	.+8      	; 0x3c6 <vfprintf+0x108>
 3be:	83 2d       	mov	r24, r3
 3c0:	80 68       	ori	r24, 0x80	; 128
 3c2:	38 2e       	mov	r3, r24
 3c4:	02 c0       	rjmp	.+4      	; 0x3ca <vfprintf+0x10c>
 3c6:	88 36       	cpi	r24, 0x68	; 104
 3c8:	41 f4       	brne	.+16     	; 0x3da <vfprintf+0x11c>
 3ca:	f7 01       	movw	r30, r14
 3cc:	93 fd       	sbrc	r25, 3
 3ce:	85 91       	lpm	r24, Z+
 3d0:	93 ff       	sbrs	r25, 3
 3d2:	81 91       	ld	r24, Z+
 3d4:	7f 01       	movw	r14, r30
 3d6:	81 11       	cpse	r24, r1
 3d8:	b3 cf       	rjmp	.-154    	; 0x340 <vfprintf+0x82>
 3da:	98 2f       	mov	r25, r24
 3dc:	9f 7d       	andi	r25, 0xDF	; 223
 3de:	95 54       	subi	r25, 0x45	; 69
 3e0:	93 30       	cpi	r25, 0x03	; 3
 3e2:	28 f4       	brcc	.+10     	; 0x3ee <vfprintf+0x130>
 3e4:	0c 5f       	subi	r16, 0xFC	; 252
 3e6:	1f 4f       	sbci	r17, 0xFF	; 255
 3e8:	9f e3       	ldi	r25, 0x3F	; 63
 3ea:	99 83       	std	Y+1, r25	; 0x01
 3ec:	0d c0       	rjmp	.+26     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3ee:	83 36       	cpi	r24, 0x63	; 99
 3f0:	31 f0       	breq	.+12     	; 0x3fe <vfprintf+0x140>
 3f2:	83 37       	cpi	r24, 0x73	; 115
 3f4:	71 f0       	breq	.+28     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3f6:	83 35       	cpi	r24, 0x53	; 83
 3f8:	09 f0       	breq	.+2      	; 0x3fc <vfprintf+0x13e>
 3fa:	55 c0       	rjmp	.+170    	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 3fc:	20 c0       	rjmp	.+64     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 3fe:	f8 01       	movw	r30, r16
 400:	80 81       	ld	r24, Z
 402:	89 83       	std	Y+1, r24	; 0x01
 404:	0e 5f       	subi	r16, 0xFE	; 254
 406:	1f 4f       	sbci	r17, 0xFF	; 255
 408:	88 24       	eor	r8, r8
 40a:	83 94       	inc	r8
 40c:	91 2c       	mov	r9, r1
 40e:	53 01       	movw	r10, r6
 410:	12 c0       	rjmp	.+36     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 412:	28 01       	movw	r4, r16
 414:	f2 e0       	ldi	r31, 0x02	; 2
 416:	4f 0e       	add	r4, r31
 418:	51 1c       	adc	r5, r1
 41a:	f8 01       	movw	r30, r16
 41c:	a0 80       	ld	r10, Z
 41e:	b1 80       	ldd	r11, Z+1	; 0x01
 420:	36 fe       	sbrs	r3, 6
 422:	03 c0       	rjmp	.+6      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 424:	69 2d       	mov	r22, r9
 426:	70 e0       	ldi	r23, 0x00	; 0
 428:	02 c0       	rjmp	.+4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 42a:	6f ef       	ldi	r22, 0xFF	; 255
 42c:	7f ef       	ldi	r23, 0xFF	; 255
 42e:	c5 01       	movw	r24, r10
 430:	4e d1       	rcall	.+668    	; 0x6ce <strnlen>
 432:	4c 01       	movw	r8, r24
 434:	82 01       	movw	r16, r4
 436:	f3 2d       	mov	r31, r3
 438:	ff 77       	andi	r31, 0x7F	; 127
 43a:	3f 2e       	mov	r3, r31
 43c:	15 c0       	rjmp	.+42     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 43e:	28 01       	movw	r4, r16
 440:	22 e0       	ldi	r18, 0x02	; 2
 442:	42 0e       	add	r4, r18
 444:	51 1c       	adc	r5, r1
 446:	f8 01       	movw	r30, r16
 448:	a0 80       	ld	r10, Z
 44a:	b1 80       	ldd	r11, Z+1	; 0x01
 44c:	36 fe       	sbrs	r3, 6
 44e:	03 c0       	rjmp	.+6      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 450:	69 2d       	mov	r22, r9
 452:	70 e0       	ldi	r23, 0x00	; 0
 454:	02 c0       	rjmp	.+4      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 456:	6f ef       	ldi	r22, 0xFF	; 255
 458:	7f ef       	ldi	r23, 0xFF	; 255
 45a:	c5 01       	movw	r24, r10
 45c:	2d d1       	rcall	.+602    	; 0x6b8 <strnlen_P>
 45e:	4c 01       	movw	r8, r24
 460:	f3 2d       	mov	r31, r3
 462:	f0 68       	ori	r31, 0x80	; 128
 464:	3f 2e       	mov	r3, r31
 466:	82 01       	movw	r16, r4
 468:	33 fc       	sbrc	r3, 3
 46a:	19 c0       	rjmp	.+50     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 46c:	82 2d       	mov	r24, r2
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	88 16       	cp	r8, r24
 472:	99 06       	cpc	r9, r25
 474:	a0 f4       	brcc	.+40     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 476:	b6 01       	movw	r22, r12
 478:	80 e2       	ldi	r24, 0x20	; 32
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	33 d1       	rcall	.+614    	; 0x6e4 <fputc>
 47e:	2a 94       	dec	r2
 480:	f5 cf       	rjmp	.-22     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 482:	f5 01       	movw	r30, r10
 484:	37 fc       	sbrc	r3, 7
 486:	85 91       	lpm	r24, Z+
 488:	37 fe       	sbrs	r3, 7
 48a:	81 91       	ld	r24, Z+
 48c:	5f 01       	movw	r10, r30
 48e:	b6 01       	movw	r22, r12
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	28 d1       	rcall	.+592    	; 0x6e4 <fputc>
 494:	21 10       	cpse	r2, r1
 496:	2a 94       	dec	r2
 498:	21 e0       	ldi	r18, 0x01	; 1
 49a:	82 1a       	sub	r8, r18
 49c:	91 08       	sbc	r9, r1
 49e:	81 14       	cp	r8, r1
 4a0:	91 04       	cpc	r9, r1
 4a2:	79 f7       	brne	.-34     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 4a4:	e1 c0       	rjmp	.+450    	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 4a6:	84 36       	cpi	r24, 0x64	; 100
 4a8:	11 f0       	breq	.+4      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4aa:	89 36       	cpi	r24, 0x69	; 105
 4ac:	39 f5       	brne	.+78     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4ae:	f8 01       	movw	r30, r16
 4b0:	37 fe       	sbrs	r3, 7
 4b2:	07 c0       	rjmp	.+14     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4b4:	60 81       	ld	r22, Z
 4b6:	71 81       	ldd	r23, Z+1	; 0x01
 4b8:	82 81       	ldd	r24, Z+2	; 0x02
 4ba:	93 81       	ldd	r25, Z+3	; 0x03
 4bc:	0c 5f       	subi	r16, 0xFC	; 252
 4be:	1f 4f       	sbci	r17, 0xFF	; 255
 4c0:	08 c0       	rjmp	.+16     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4c2:	60 81       	ld	r22, Z
 4c4:	71 81       	ldd	r23, Z+1	; 0x01
 4c6:	07 2e       	mov	r0, r23
 4c8:	00 0c       	add	r0, r0
 4ca:	88 0b       	sbc	r24, r24
 4cc:	99 0b       	sbc	r25, r25
 4ce:	0e 5f       	subi	r16, 0xFE	; 254
 4d0:	1f 4f       	sbci	r17, 0xFF	; 255
 4d2:	f3 2d       	mov	r31, r3
 4d4:	ff 76       	andi	r31, 0x6F	; 111
 4d6:	3f 2e       	mov	r3, r31
 4d8:	97 ff       	sbrs	r25, 7
 4da:	09 c0       	rjmp	.+18     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4dc:	90 95       	com	r25
 4de:	80 95       	com	r24
 4e0:	70 95       	com	r23
 4e2:	61 95       	neg	r22
 4e4:	7f 4f       	sbci	r23, 0xFF	; 255
 4e6:	8f 4f       	sbci	r24, 0xFF	; 255
 4e8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ea:	f0 68       	ori	r31, 0x80	; 128
 4ec:	3f 2e       	mov	r3, r31
 4ee:	2a e0       	ldi	r18, 0x0A	; 10
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	a3 01       	movw	r20, r6
 4f4:	33 d1       	rcall	.+614    	; 0x75c <__ultoa_invert>
 4f6:	88 2e       	mov	r8, r24
 4f8:	86 18       	sub	r8, r6
 4fa:	44 c0       	rjmp	.+136    	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 4fc:	85 37       	cpi	r24, 0x75	; 117
 4fe:	31 f4       	brne	.+12     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 500:	23 2d       	mov	r18, r3
 502:	2f 7e       	andi	r18, 0xEF	; 239
 504:	b2 2e       	mov	r11, r18
 506:	2a e0       	ldi	r18, 0x0A	; 10
 508:	30 e0       	ldi	r19, 0x00	; 0
 50a:	25 c0       	rjmp	.+74     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 50c:	93 2d       	mov	r25, r3
 50e:	99 7f       	andi	r25, 0xF9	; 249
 510:	b9 2e       	mov	r11, r25
 512:	8f 36       	cpi	r24, 0x6F	; 111
 514:	c1 f0       	breq	.+48     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 516:	18 f4       	brcc	.+6      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 518:	88 35       	cpi	r24, 0x58	; 88
 51a:	79 f0       	breq	.+30     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 51c:	ae c0       	rjmp	.+348    	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 51e:	80 37       	cpi	r24, 0x70	; 112
 520:	19 f0       	breq	.+6      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 522:	88 37       	cpi	r24, 0x78	; 120
 524:	21 f0       	breq	.+8      	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 526:	a9 c0       	rjmp	.+338    	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 528:	e9 2f       	mov	r30, r25
 52a:	e0 61       	ori	r30, 0x10	; 16
 52c:	be 2e       	mov	r11, r30
 52e:	b4 fe       	sbrs	r11, 4
 530:	0d c0       	rjmp	.+26     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 532:	fb 2d       	mov	r31, r11
 534:	f4 60       	ori	r31, 0x04	; 4
 536:	bf 2e       	mov	r11, r31
 538:	09 c0       	rjmp	.+18     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 53a:	34 fe       	sbrs	r3, 4
 53c:	0a c0       	rjmp	.+20     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 53e:	29 2f       	mov	r18, r25
 540:	26 60       	ori	r18, 0x06	; 6
 542:	b2 2e       	mov	r11, r18
 544:	06 c0       	rjmp	.+12     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 546:	28 e0       	ldi	r18, 0x08	; 8
 548:	30 e0       	ldi	r19, 0x00	; 0
 54a:	05 c0       	rjmp	.+10     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 54c:	20 e1       	ldi	r18, 0x10	; 16
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	02 c0       	rjmp	.+4      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 552:	20 e1       	ldi	r18, 0x10	; 16
 554:	32 e0       	ldi	r19, 0x02	; 2
 556:	f8 01       	movw	r30, r16
 558:	b7 fe       	sbrs	r11, 7
 55a:	07 c0       	rjmp	.+14     	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 55c:	60 81       	ld	r22, Z
 55e:	71 81       	ldd	r23, Z+1	; 0x01
 560:	82 81       	ldd	r24, Z+2	; 0x02
 562:	93 81       	ldd	r25, Z+3	; 0x03
 564:	0c 5f       	subi	r16, 0xFC	; 252
 566:	1f 4f       	sbci	r17, 0xFF	; 255
 568:	06 c0       	rjmp	.+12     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 56a:	60 81       	ld	r22, Z
 56c:	71 81       	ldd	r23, Z+1	; 0x01
 56e:	80 e0       	ldi	r24, 0x00	; 0
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	0e 5f       	subi	r16, 0xFE	; 254
 574:	1f 4f       	sbci	r17, 0xFF	; 255
 576:	a3 01       	movw	r20, r6
 578:	f1 d0       	rcall	.+482    	; 0x75c <__ultoa_invert>
 57a:	88 2e       	mov	r8, r24
 57c:	86 18       	sub	r8, r6
 57e:	fb 2d       	mov	r31, r11
 580:	ff 77       	andi	r31, 0x7F	; 127
 582:	3f 2e       	mov	r3, r31
 584:	36 fe       	sbrs	r3, 6
 586:	0d c0       	rjmp	.+26     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 588:	23 2d       	mov	r18, r3
 58a:	2e 7f       	andi	r18, 0xFE	; 254
 58c:	a2 2e       	mov	r10, r18
 58e:	89 14       	cp	r8, r9
 590:	58 f4       	brcc	.+22     	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 592:	34 fe       	sbrs	r3, 4
 594:	0b c0       	rjmp	.+22     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 596:	32 fc       	sbrc	r3, 2
 598:	09 c0       	rjmp	.+18     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 59a:	83 2d       	mov	r24, r3
 59c:	8e 7e       	andi	r24, 0xEE	; 238
 59e:	a8 2e       	mov	r10, r24
 5a0:	05 c0       	rjmp	.+10     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5a2:	b8 2c       	mov	r11, r8
 5a4:	a3 2c       	mov	r10, r3
 5a6:	03 c0       	rjmp	.+6      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5a8:	b8 2c       	mov	r11, r8
 5aa:	01 c0       	rjmp	.+2      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5ac:	b9 2c       	mov	r11, r9
 5ae:	a4 fe       	sbrs	r10, 4
 5b0:	0f c0       	rjmp	.+30     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5b2:	fe 01       	movw	r30, r28
 5b4:	e8 0d       	add	r30, r8
 5b6:	f1 1d       	adc	r31, r1
 5b8:	80 81       	ld	r24, Z
 5ba:	80 33       	cpi	r24, 0x30	; 48
 5bc:	21 f4       	brne	.+8      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5be:	9a 2d       	mov	r25, r10
 5c0:	99 7e       	andi	r25, 0xE9	; 233
 5c2:	a9 2e       	mov	r10, r25
 5c4:	09 c0       	rjmp	.+18     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5c6:	a2 fe       	sbrs	r10, 2
 5c8:	06 c0       	rjmp	.+12     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5ca:	b3 94       	inc	r11
 5cc:	b3 94       	inc	r11
 5ce:	04 c0       	rjmp	.+8      	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5d0:	8a 2d       	mov	r24, r10
 5d2:	86 78       	andi	r24, 0x86	; 134
 5d4:	09 f0       	breq	.+2      	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5d6:	b3 94       	inc	r11
 5d8:	a3 fc       	sbrc	r10, 3
 5da:	10 c0       	rjmp	.+32     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5dc:	a0 fe       	sbrs	r10, 0
 5de:	06 c0       	rjmp	.+12     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5e0:	b2 14       	cp	r11, r2
 5e2:	80 f4       	brcc	.+32     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5e4:	28 0c       	add	r2, r8
 5e6:	92 2c       	mov	r9, r2
 5e8:	9b 18       	sub	r9, r11
 5ea:	0d c0       	rjmp	.+26     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5ec:	b2 14       	cp	r11, r2
 5ee:	58 f4       	brcc	.+22     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5f0:	b6 01       	movw	r22, r12
 5f2:	80 e2       	ldi	r24, 0x20	; 32
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	76 d0       	rcall	.+236    	; 0x6e4 <fputc>
 5f8:	b3 94       	inc	r11
 5fa:	f8 cf       	rjmp	.-16     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5fc:	b2 14       	cp	r11, r2
 5fe:	18 f4       	brcc	.+6      	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 600:	2b 18       	sub	r2, r11
 602:	02 c0       	rjmp	.+4      	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 604:	98 2c       	mov	r9, r8
 606:	21 2c       	mov	r2, r1
 608:	a4 fe       	sbrs	r10, 4
 60a:	0f c0       	rjmp	.+30     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 60c:	b6 01       	movw	r22, r12
 60e:	80 e3       	ldi	r24, 0x30	; 48
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	68 d0       	rcall	.+208    	; 0x6e4 <fputc>
 614:	a2 fe       	sbrs	r10, 2
 616:	16 c0       	rjmp	.+44     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 618:	a1 fc       	sbrc	r10, 1
 61a:	03 c0       	rjmp	.+6      	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 61c:	88 e7       	ldi	r24, 0x78	; 120
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	02 c0       	rjmp	.+4      	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 622:	88 e5       	ldi	r24, 0x58	; 88
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	b6 01       	movw	r22, r12
 628:	0c c0       	rjmp	.+24     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 62a:	8a 2d       	mov	r24, r10
 62c:	86 78       	andi	r24, 0x86	; 134
 62e:	51 f0       	breq	.+20     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 630:	a1 fe       	sbrs	r10, 1
 632:	02 c0       	rjmp	.+4      	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 634:	8b e2       	ldi	r24, 0x2B	; 43
 636:	01 c0       	rjmp	.+2      	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 638:	80 e2       	ldi	r24, 0x20	; 32
 63a:	a7 fc       	sbrc	r10, 7
 63c:	8d e2       	ldi	r24, 0x2D	; 45
 63e:	b6 01       	movw	r22, r12
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	50 d0       	rcall	.+160    	; 0x6e4 <fputc>
 644:	89 14       	cp	r8, r9
 646:	30 f4       	brcc	.+12     	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 648:	b6 01       	movw	r22, r12
 64a:	80 e3       	ldi	r24, 0x30	; 48
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	4a d0       	rcall	.+148    	; 0x6e4 <fputc>
 650:	9a 94       	dec	r9
 652:	f8 cf       	rjmp	.-16     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 654:	8a 94       	dec	r8
 656:	f3 01       	movw	r30, r6
 658:	e8 0d       	add	r30, r8
 65a:	f1 1d       	adc	r31, r1
 65c:	80 81       	ld	r24, Z
 65e:	b6 01       	movw	r22, r12
 660:	90 e0       	ldi	r25, 0x00	; 0
 662:	40 d0       	rcall	.+128    	; 0x6e4 <fputc>
 664:	81 10       	cpse	r8, r1
 666:	f6 cf       	rjmp	.-20     	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 668:	22 20       	and	r2, r2
 66a:	09 f4       	brne	.+2      	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 66c:	4e ce       	rjmp	.-868    	; 0x30a <vfprintf+0x4c>
 66e:	b6 01       	movw	r22, r12
 670:	80 e2       	ldi	r24, 0x20	; 32
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	37 d0       	rcall	.+110    	; 0x6e4 <fputc>
 676:	2a 94       	dec	r2
 678:	f7 cf       	rjmp	.-18     	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 67a:	f6 01       	movw	r30, r12
 67c:	86 81       	ldd	r24, Z+6	; 0x06
 67e:	97 81       	ldd	r25, Z+7	; 0x07
 680:	02 c0       	rjmp	.+4      	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 682:	8f ef       	ldi	r24, 0xFF	; 255
 684:	9f ef       	ldi	r25, 0xFF	; 255
 686:	2b 96       	adiw	r28, 0x0b	; 11
 688:	0f b6       	in	r0, 0x3f	; 63
 68a:	f8 94       	cli
 68c:	de bf       	out	0x3e, r29	; 62
 68e:	0f be       	out	0x3f, r0	; 63
 690:	cd bf       	out	0x3d, r28	; 61
 692:	df 91       	pop	r29
 694:	cf 91       	pop	r28
 696:	1f 91       	pop	r17
 698:	0f 91       	pop	r16
 69a:	ff 90       	pop	r15
 69c:	ef 90       	pop	r14
 69e:	df 90       	pop	r13
 6a0:	cf 90       	pop	r12
 6a2:	bf 90       	pop	r11
 6a4:	af 90       	pop	r10
 6a6:	9f 90       	pop	r9
 6a8:	8f 90       	pop	r8
 6aa:	7f 90       	pop	r7
 6ac:	6f 90       	pop	r6
 6ae:	5f 90       	pop	r5
 6b0:	4f 90       	pop	r4
 6b2:	3f 90       	pop	r3
 6b4:	2f 90       	pop	r2
 6b6:	08 95       	ret

000006b8 <strnlen_P>:
 6b8:	fc 01       	movw	r30, r24
 6ba:	05 90       	lpm	r0, Z+
 6bc:	61 50       	subi	r22, 0x01	; 1
 6be:	70 40       	sbci	r23, 0x00	; 0
 6c0:	01 10       	cpse	r0, r1
 6c2:	d8 f7       	brcc	.-10     	; 0x6ba <strnlen_P+0x2>
 6c4:	80 95       	com	r24
 6c6:	90 95       	com	r25
 6c8:	8e 0f       	add	r24, r30
 6ca:	9f 1f       	adc	r25, r31
 6cc:	08 95       	ret

000006ce <strnlen>:
 6ce:	fc 01       	movw	r30, r24
 6d0:	61 50       	subi	r22, 0x01	; 1
 6d2:	70 40       	sbci	r23, 0x00	; 0
 6d4:	01 90       	ld	r0, Z+
 6d6:	01 10       	cpse	r0, r1
 6d8:	d8 f7       	brcc	.-10     	; 0x6d0 <strnlen+0x2>
 6da:	80 95       	com	r24
 6dc:	90 95       	com	r25
 6de:	8e 0f       	add	r24, r30
 6e0:	9f 1f       	adc	r25, r31
 6e2:	08 95       	ret

000006e4 <fputc>:
 6e4:	0f 93       	push	r16
 6e6:	1f 93       	push	r17
 6e8:	cf 93       	push	r28
 6ea:	df 93       	push	r29
 6ec:	fb 01       	movw	r30, r22
 6ee:	23 81       	ldd	r18, Z+3	; 0x03
 6f0:	21 fd       	sbrc	r18, 1
 6f2:	03 c0       	rjmp	.+6      	; 0x6fa <fputc+0x16>
 6f4:	8f ef       	ldi	r24, 0xFF	; 255
 6f6:	9f ef       	ldi	r25, 0xFF	; 255
 6f8:	2c c0       	rjmp	.+88     	; 0x752 <fputc+0x6e>
 6fa:	22 ff       	sbrs	r18, 2
 6fc:	16 c0       	rjmp	.+44     	; 0x72a <fputc+0x46>
 6fe:	46 81       	ldd	r20, Z+6	; 0x06
 700:	57 81       	ldd	r21, Z+7	; 0x07
 702:	24 81       	ldd	r18, Z+4	; 0x04
 704:	35 81       	ldd	r19, Z+5	; 0x05
 706:	42 17       	cp	r20, r18
 708:	53 07       	cpc	r21, r19
 70a:	44 f4       	brge	.+16     	; 0x71c <fputc+0x38>
 70c:	a0 81       	ld	r26, Z
 70e:	b1 81       	ldd	r27, Z+1	; 0x01
 710:	9d 01       	movw	r18, r26
 712:	2f 5f       	subi	r18, 0xFF	; 255
 714:	3f 4f       	sbci	r19, 0xFF	; 255
 716:	31 83       	std	Z+1, r19	; 0x01
 718:	20 83       	st	Z, r18
 71a:	8c 93       	st	X, r24
 71c:	26 81       	ldd	r18, Z+6	; 0x06
 71e:	37 81       	ldd	r19, Z+7	; 0x07
 720:	2f 5f       	subi	r18, 0xFF	; 255
 722:	3f 4f       	sbci	r19, 0xFF	; 255
 724:	37 83       	std	Z+7, r19	; 0x07
 726:	26 83       	std	Z+6, r18	; 0x06
 728:	14 c0       	rjmp	.+40     	; 0x752 <fputc+0x6e>
 72a:	8b 01       	movw	r16, r22
 72c:	ec 01       	movw	r28, r24
 72e:	fb 01       	movw	r30, r22
 730:	00 84       	ldd	r0, Z+8	; 0x08
 732:	f1 85       	ldd	r31, Z+9	; 0x09
 734:	e0 2d       	mov	r30, r0
 736:	09 95       	icall
 738:	89 2b       	or	r24, r25
 73a:	e1 f6       	brne	.-72     	; 0x6f4 <fputc+0x10>
 73c:	d8 01       	movw	r26, r16
 73e:	16 96       	adiw	r26, 0x06	; 6
 740:	8d 91       	ld	r24, X+
 742:	9c 91       	ld	r25, X
 744:	17 97       	sbiw	r26, 0x07	; 7
 746:	01 96       	adiw	r24, 0x01	; 1
 748:	17 96       	adiw	r26, 0x07	; 7
 74a:	9c 93       	st	X, r25
 74c:	8e 93       	st	-X, r24
 74e:	16 97       	sbiw	r26, 0x06	; 6
 750:	ce 01       	movw	r24, r28
 752:	df 91       	pop	r29
 754:	cf 91       	pop	r28
 756:	1f 91       	pop	r17
 758:	0f 91       	pop	r16
 75a:	08 95       	ret

0000075c <__ultoa_invert>:
 75c:	fa 01       	movw	r30, r20
 75e:	aa 27       	eor	r26, r26
 760:	28 30       	cpi	r18, 0x08	; 8
 762:	51 f1       	breq	.+84     	; 0x7b8 <__ultoa_invert+0x5c>
 764:	20 31       	cpi	r18, 0x10	; 16
 766:	81 f1       	breq	.+96     	; 0x7c8 <__ultoa_invert+0x6c>
 768:	e8 94       	clt
 76a:	6f 93       	push	r22
 76c:	6e 7f       	andi	r22, 0xFE	; 254
 76e:	6e 5f       	subi	r22, 0xFE	; 254
 770:	7f 4f       	sbci	r23, 0xFF	; 255
 772:	8f 4f       	sbci	r24, 0xFF	; 255
 774:	9f 4f       	sbci	r25, 0xFF	; 255
 776:	af 4f       	sbci	r26, 0xFF	; 255
 778:	b1 e0       	ldi	r27, 0x01	; 1
 77a:	3e d0       	rcall	.+124    	; 0x7f8 <__ultoa_invert+0x9c>
 77c:	b4 e0       	ldi	r27, 0x04	; 4
 77e:	3c d0       	rcall	.+120    	; 0x7f8 <__ultoa_invert+0x9c>
 780:	67 0f       	add	r22, r23
 782:	78 1f       	adc	r23, r24
 784:	89 1f       	adc	r24, r25
 786:	9a 1f       	adc	r25, r26
 788:	a1 1d       	adc	r26, r1
 78a:	68 0f       	add	r22, r24
 78c:	79 1f       	adc	r23, r25
 78e:	8a 1f       	adc	r24, r26
 790:	91 1d       	adc	r25, r1
 792:	a1 1d       	adc	r26, r1
 794:	6a 0f       	add	r22, r26
 796:	71 1d       	adc	r23, r1
 798:	81 1d       	adc	r24, r1
 79a:	91 1d       	adc	r25, r1
 79c:	a1 1d       	adc	r26, r1
 79e:	20 d0       	rcall	.+64     	; 0x7e0 <__ultoa_invert+0x84>
 7a0:	09 f4       	brne	.+2      	; 0x7a4 <__ultoa_invert+0x48>
 7a2:	68 94       	set
 7a4:	3f 91       	pop	r19
 7a6:	2a e0       	ldi	r18, 0x0A	; 10
 7a8:	26 9f       	mul	r18, r22
 7aa:	11 24       	eor	r1, r1
 7ac:	30 19       	sub	r19, r0
 7ae:	30 5d       	subi	r19, 0xD0	; 208
 7b0:	31 93       	st	Z+, r19
 7b2:	de f6       	brtc	.-74     	; 0x76a <__ultoa_invert+0xe>
 7b4:	cf 01       	movw	r24, r30
 7b6:	08 95       	ret
 7b8:	46 2f       	mov	r20, r22
 7ba:	47 70       	andi	r20, 0x07	; 7
 7bc:	40 5d       	subi	r20, 0xD0	; 208
 7be:	41 93       	st	Z+, r20
 7c0:	b3 e0       	ldi	r27, 0x03	; 3
 7c2:	0f d0       	rcall	.+30     	; 0x7e2 <__ultoa_invert+0x86>
 7c4:	c9 f7       	brne	.-14     	; 0x7b8 <__ultoa_invert+0x5c>
 7c6:	f6 cf       	rjmp	.-20     	; 0x7b4 <__ultoa_invert+0x58>
 7c8:	46 2f       	mov	r20, r22
 7ca:	4f 70       	andi	r20, 0x0F	; 15
 7cc:	40 5d       	subi	r20, 0xD0	; 208
 7ce:	4a 33       	cpi	r20, 0x3A	; 58
 7d0:	18 f0       	brcs	.+6      	; 0x7d8 <__ultoa_invert+0x7c>
 7d2:	49 5d       	subi	r20, 0xD9	; 217
 7d4:	31 fd       	sbrc	r19, 1
 7d6:	40 52       	subi	r20, 0x20	; 32
 7d8:	41 93       	st	Z+, r20
 7da:	02 d0       	rcall	.+4      	; 0x7e0 <__ultoa_invert+0x84>
 7dc:	a9 f7       	brne	.-22     	; 0x7c8 <__ultoa_invert+0x6c>
 7de:	ea cf       	rjmp	.-44     	; 0x7b4 <__ultoa_invert+0x58>
 7e0:	b4 e0       	ldi	r27, 0x04	; 4
 7e2:	a6 95       	lsr	r26
 7e4:	97 95       	ror	r25
 7e6:	87 95       	ror	r24
 7e8:	77 95       	ror	r23
 7ea:	67 95       	ror	r22
 7ec:	ba 95       	dec	r27
 7ee:	c9 f7       	brne	.-14     	; 0x7e2 <__ultoa_invert+0x86>
 7f0:	00 97       	sbiw	r24, 0x00	; 0
 7f2:	61 05       	cpc	r22, r1
 7f4:	71 05       	cpc	r23, r1
 7f6:	08 95       	ret
 7f8:	9b 01       	movw	r18, r22
 7fa:	ac 01       	movw	r20, r24
 7fc:	0a 2e       	mov	r0, r26
 7fe:	06 94       	lsr	r0
 800:	57 95       	ror	r21
 802:	47 95       	ror	r20
 804:	37 95       	ror	r19
 806:	27 95       	ror	r18
 808:	ba 95       	dec	r27
 80a:	c9 f7       	brne	.-14     	; 0x7fe <__ultoa_invert+0xa2>
 80c:	62 0f       	add	r22, r18
 80e:	73 1f       	adc	r23, r19
 810:	84 1f       	adc	r24, r20
 812:	95 1f       	adc	r25, r21
 814:	a0 1d       	adc	r26, r0
 816:	08 95       	ret

00000818 <_exit>:
 818:	f8 94       	cli

0000081a <__stop_program>:
 81a:	ff cf       	rjmp	.-2      	; 0x81a <__stop_program>
